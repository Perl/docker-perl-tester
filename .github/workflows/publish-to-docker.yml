# https://github.com/marketplace/actions/publish-docker

name: Publish to Docker
on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "10 6 * * *"
  workflow_dispatch:

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    name: List perl versions
    outputs:
      perl-versions: ${{ steps.action.outputs.perl-versions }}
    steps:
      - name: Perl versions action step
        id: action
        uses: perl-actions/perl-versions@main
        with:
          since-perl: '5.8'
          with-devel: 'true'

  latest-build:
    name: "Build latest"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        debian-version: [buster,bookworm]

    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ secrets.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_GITHUB_TOKEN }}
          dockerfile: Dockerfile
          buildargs: BASE=buster
          tags: "latest,${{ matrix.debian-version }}"

  build:
    name: "Build versions"
    runs-on: ubuntu-latest
    needs:
      - prepare-matrix

    strategy:
      fail-fast: false
      matrix:
        perl-version: ${{ fromJson (needs.prepare-matrix.outputs.perl-versions) }}
        debian-version: [buster,bookworm]

    steps:
      - uses: actions/checkout@v4
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ secrets.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_GITHUB_TOKEN }}
          dockerfile: Dockerfile
          buildargs: BASE=${{ matrix.perl-version }}-${{ matrix.debian-version }},CPANOUTDATED=${{ matrix.perl-version != '5.8' }}
          tags: "${{ matrix.perl-version }}-${{ matrix.debian-version }}${{ matrix.debian-version=='buster' && format(',{0}',matrix.perl-version) || '' }}"
